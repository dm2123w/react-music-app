{"version":3,"sources":["components/Player.js","components/Song.js","components/LibrarySong.js","components/Library.js","components/Nav.js","data.js","App.js","reportWebVitals.js","index.js"],"names":["Player","audioRef","currentSong","isPlaying","setIsPlaying","songInfo","setSongInfo","songs","setCurrentSong","setSongs","activeLibraryHandler","nextPrev","newSongs","map","song","id","active","getTime","time","Math","floor","slice","skipTrackHandler","direction","a","currentIndex","findIndex","length","current","play","trackAnim","transform","animationPercentage","className","currentTime","style","background","color","min","max","duration","value","onChange","e","target","type","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","Song","alt","name","src","cover","artist","LibrarySong","songSelectHandler","Library","libraryStatus","Nav","setLibraryStatus","faMusic","chillHop","audio","uuidv4","App","useRef","useState","data","timeUpdateHandler","roundedCurrent","round","roundedDuration","animation","songEndHandler","onTimeUpdate","onLoadedMetadata","onEnded","ref","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aedee9cb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n    faPlay,\r\n    faAngleLeft,\r\n    faAngleRight,\r\n    faPause,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Player = ({\r\n    audioRef,\r\n    currentSong,\r\n    isPlaying,\r\n    setIsPlaying,\r\n    songInfo,\r\n    setSongInfo,\r\n    songs,\r\n    setCurrentSong,\r\n    setSongs,\r\n}) => {\r\n    const activeLibraryHandler = (nextPrev) => {\r\n        const newSongs = songs.map((song) => {\r\n            if (song.id === nextPrev.id) {\r\n                return {\r\n                    ...song,\r\n                    active: true,\r\n                };\r\n            } else {\r\n                return {\r\n                    ...song,\r\n                    active: false,\r\n                };\r\n            }\r\n        });\r\n        setSongs(newSongs);\r\n    }\r\n    // Event Handlers\r\n    const playSongHandler = () => {\r\n        if (isPlaying) {\r\n            audioRef.current.pause();\r\n            setIsPlaying(!isPlaying);\r\n        } else {\r\n            audioRef.current.play();\r\n            setIsPlaying(!isPlaying);\r\n        }\r\n    };\r\n\r\n    const getTime = (time) => {\r\n        return (\r\n            Math.floor(time / 60) +\r\n            \":\" +\r\n            (\"0\" + Math.floor(time % 60)).slice(-2)\r\n        );\r\n    };\r\n\r\n    const dragHandler = (e) => {\r\n        audioRef.current.currentTime = e.target.value;\r\n        setSongInfo({ ...songInfo, currentTime: e.target.value });\r\n    };\r\n\r\n    const skipTrackHandler = async (direction) => {\r\n        let currentIndex = songs.findIndex(\r\n            (song) => song.id === currentSong.id\r\n        );\r\n        if (direction === \"skip-forward\") {\r\n            await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\r\n            activeLibraryHandler(songs[(currentIndex + 1) % songs.length]);\r\n        }\r\n        if (direction === \"skip-back\") {\r\n            if ((currentIndex - 1) % songs.length === -1) {\r\n                await setCurrentSong(songs[songs.length - 1]);\r\n                activeLibraryHandler(songs[songs.length - 1]);\r\n                if (isPlaying) audioRef.current.play();\r\n                return;\r\n            }\r\n            await setCurrentSong(songs[(currentIndex - 1) % songs.length]);\r\n            activeLibraryHandler(songs[(currentIndex - 1) % songs.length]);\r\n        }\r\n        if (isPlaying) audioRef.current.play();\r\n    };\r\n\r\n    // Add the styles\r\n    const trackAnim = {\r\n        transform: `translateX(${songInfo.animationPercentage}%)`,\r\n    };\r\n\r\n    return (\r\n        <div className=\"player\">\r\n            <div className=\"time-control\">\r\n                <p>{getTime(songInfo.currentTime)}</p>\r\n                <div\r\n                    className=\"track\"\r\n                    style={{\r\n                        background: `linear-gradient(to right, ${currentSong.color[0]}, ${currentSong.color[1]})`,\r\n                    }}\r\n                >\r\n                    <input\r\n                        min={0}\r\n                        max={songInfo.duration || 0}\r\n                        value={songInfo.currentTime}\r\n                        onChange={dragHandler}\r\n                        type=\"range\"\r\n                    />\r\n                    <div className=\"animate-track\" style={trackAnim}></div>\r\n                </div>\r\n\r\n                <p>{songInfo.duration ? getTime(songInfo.duration) : \"0:00\"}</p>\r\n            </div>\r\n            <div className=\"play-control\">\r\n                <FontAwesomeIcon\r\n                    onClick={() => skipTrackHandler(\"skip-back\")}\r\n                    className=\"skip-back\"\r\n                    size=\"2x\"\r\n                    icon={faAngleLeft}\r\n                />\r\n                <FontAwesomeIcon\r\n                    onClick={playSongHandler}\r\n                    className=\"play\"\r\n                    size=\"2x\"\r\n                    icon={isPlaying ? faPause : faPlay}\r\n                />\r\n                <FontAwesomeIcon\r\n                    onClick={() => skipTrackHandler(\"skip-forward\")}\r\n                    className=\"skip-forward\"\r\n                    size=\"2x\"\r\n                    icon={faAngleRight}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Player;\r\n","import React from \"react\";\r\n\r\nconst Song = ({ currentSong }) => {\r\n    return (\r\n        <div className=\"song-container\">\r\n            <img alt={currentSong.name} src={currentSong.cover}></img>\r\n            <h2>{currentSong.name}</h2>\r\n            <h3>{currentSong.artist}</h3>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Song;\r\n","import React from \"react\";\r\n\r\nconst LibrarySong = ({\r\n    song,\r\n    songs,\r\n    setCurrentSong,\r\n    id,\r\n    audioRef,\r\n    isPlaying,\r\n    setSongs,\r\n}) => {\r\n    const songSelectHandler = async () => {\r\n        await setCurrentSong(song);\r\n\r\n        // Add active state\r\n        const newSongs = songs.map((song) => {\r\n            if (song.id === id) {\r\n                return {\r\n                    ...song,\r\n                    active: true,\r\n                };\r\n            } else {\r\n                return {\r\n                    ...song,\r\n                    active: false,\r\n                };\r\n            }\r\n        });\r\n        setSongs(newSongs);\r\n\r\n        // Check if the song is playing\r\n        if (isPlaying) audioRef.current.play();\r\n    };\r\n    return (\r\n        <div\r\n            onClick={songSelectHandler}\r\n            className={`library-songs ${song.active ? \"selected\" : \"\"}`}\r\n        >\r\n            <img alt={song.name} src={song.cover}></img>\r\n            <div className=\"song-description\">\r\n                <h3>{song.name}</h3>\r\n                <h4>{song.artist}</h4>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LibrarySong;\r\n","import React from \"react\";\r\nimport LibrarySong from \"./LibrarySong\";\r\n\r\nconst Library = ({\r\n    songs,\r\n    setCurrentSong,\r\n    audioRef,\r\n    isPlaying,\r\n    setSongs,\r\n    libraryStatus,\r\n}) => {\r\n    return (\r\n        <div className={`library ${libraryStatus ? \"active-library\" : \"\"}`}>\r\n            <h2>Library</h2>\r\n            <div className=\"library-song\">\r\n                {songs.map((song) => (\r\n                    <LibrarySong\r\n                        song={song}\r\n                        songs={songs}\r\n                        setCurrentSong={setCurrentSong}\r\n                        id={song.id}\r\n                        key={song.id}\r\n                        audioRef={audioRef}\r\n                        isPlaying={isPlaying}\r\n                        setSongs={setSongs}\r\n                    />\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Library;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nav = ({ libraryStatus, setLibraryStatus }) => {\r\n    return (\r\n        <nav>\r\n            <h1>Music Player</h1>\r\n            <button onClick={() => setLibraryStatus(!libraryStatus)}>\r\n                Library <FontAwesomeIcon icon={faMusic} />\r\n            </button>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Nav;\r\n","import { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction chillHop() {\r\n  return [\r\n    {\r\n      name: \"Beaver Creek\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10075\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: true,\r\n    },\r\n    {\r\n      name: \"Daylight\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9272\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Keep Going\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9222\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Nightfall\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ef95e219a44869318b7806e9f0f794a1f9c451e4-1024x1024.jpg\",\r\n      artist: \"Aiguille\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9148\",\r\n      color: [\"#EF8EA9\", \"#ab417f\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Reflection\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/07/ff35dede32321a8aa0953809812941bcf8a6bd35-1024x1024.jpg\",\r\n      artist: \"Swørn\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9228\",\r\n      color: [\"#CD607D\", \"#c94043\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    },\r\n    {\r\n      name: \"Under the City Stars\",\r\n      cover:\r\n        \"https://chillhop.com/wp-content/uploads/2020/09/0255e8b8c74c90d4a27c594b3452b2daafae608d-1024x1024.jpg\",\r\n      artist: \"Aso, Middle School, Aviino\",\r\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10074\",\r\n      color: [\"#205950\", \"#2ab3bf\"],\r\n      id: uuidv4(),\r\n      active: false,\r\n    }\r\n  ];\r\n}\r\n\r\nexport default chillHop;\r\n","import { useState, useRef } from \"react\";\nimport \"./styles/app.scss\";\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\nimport data from \"./data\";\n\nfunction App() {\n    // Ref\n    const audioRef = useRef(null);\n    // State\n    const [songs, setSongs] = useState(data());\n    const [currentSong, setCurrentSong] = useState(songs[0]);\n    const [isPlaying, setIsPlaying] = useState(false);\n    const [songInfo, setSongInfo] = useState({\n        currentTime: 0,\n        duration: 0,\n        animationPercentage: 0,\n    });\n    const [libraryStatus, setLibraryStatus] = useState(false);\n\n    const timeUpdateHandler = (e) => {\n        const current = e.target.currentTime;\n        const duration = e.target.duration;\n        // Calculate percentage\n        const roundedCurrent = Math.round(current);\n        const roundedDuration = Math.round(duration);\n        const animation = Math.round((roundedCurrent / roundedDuration) * 100);\n\n        setSongInfo({\n            ...songInfo,\n            currentTime: current,\n            duration,\n            animationPercentage: animation,\n        });\n    };\n\n    const songEndHandler = async () => {\n        let currentIndex = songs.findIndex(\n            (song) => song.id === currentSong.id\n        );\n        await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n        if (isPlaying) audioRef.current.play();\n    };\n\n    return (\n        <div className=\"App\">\n            <Nav\n                libraryStatus={libraryStatus}\n                setLibraryStatus={setLibraryStatus}\n            />\n            <Song currentSong={currentSong} />\n            <Player\n                audioRef={audioRef}\n                currentSong={currentSong}\n                isPlaying={isPlaying}\n                setIsPlaying={setIsPlaying}\n                songInfo={songInfo}\n                setSongInfo={setSongInfo}\n                songs={songs}\n                setCurrentSong={setCurrentSong}\n                setSongs={setSongs}\n            />\n            <Library\n                audioRef={audioRef}\n                songs={songs}\n                setCurrentSong={setCurrentSong}\n                isPlaying={isPlaying}\n                setSongs={setSongs}\n                libraryStatus={libraryStatus}\n            />\n            <audio\n                onTimeUpdate={timeUpdateHandler}\n                onLoadedMetadata={timeUpdateHandler}\n                onEnded={songEndHandler}\n                ref={audioRef}\n                src={currentSong.audio}\n            ></audio>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}